geom_point(size=0.75)
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75, color="black")
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75, color= value)
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
StackNoZed <- subset(stacked, value=!0, select=(value, variable))
StackNoZed <- subset(stacked, value=!0, select=(value))
View(StackNoZed)
StackNoZed <- subset(stacked, value=!0, select= c(value, variable))
View(StackNoZed)
ggplot(StackNoZed, aes(nrow, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
ggplot(StackNoZed, aes(n, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
ggplot(StackNoZed, aes(row(StackNoZed), value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
ggplot(StackNoZed, aes(row, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
StackNoZed <- cbind(seq(1:nrow(StackNoZed), StackNoZed))
Day <- seq(1:nrow(StackNoZed))
Day <- rep(seq(1:nrow(StackNoZed$variable)))
Day <- rep(seq(1:nrow(Unique(StackNoZed$variable)))
)
Day <- rep(seq(1:nrow(unique(StackNoZed$variable))))
Day <- seq(1:nrow(StackNoZed))
cbind(Day, StackNoZed)
StackNoZed <-cbind(Day, StackNoZed)
ggplot(StackNoZed, aes(Day, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
StackNoZed <- subset(stacked, value=!0, select= c(value, variable))
ggplot(StackNoZed, aes( value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
ggplot(StackNoZed, aes( value, colour = variable, group=variable))+
geom_freqpoly()+
geom_point(size=0.75)
ggplot(StackNoZed, aes( value, colour = variable, group=variable))+
geom_freqpoly()
StackNoZed <- subset(stacked, value=!0, select= c(value, variable, Date))
unique(StackNoZed$Date)
length(unique(StackNoZed$Date))
length(unique(stack()$Date))
length(unique(stack$Date))
length(unique(stacked$Date))
ggplot(StackNoZed, aes( Date, value, colour = variable, group=variable))+
geom_line()
geom_point(size=0.75)
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
unique(StackNoZed$variable)
length(unique(StackNoZed$variable))
library(dplyr)
summarise(StackNoZed, variable)
llist(StackNoZed$variable)
nats<-StackNoZed$variable
summarise(nats)
stacked <- with(KeyCountriesPerCapita,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesPerCapita)),
Date = Date))
nats<-StackNoZed$variable
stacked <- with(KeyCountriesPerCapita,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = factor(rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesPerCapita))),
Date = Date))
summarise(group_by(StackNoZed, variable, nrow))
summarise(group_by(StackNoZed, variable, nrow(StackNoZed)))
summarise(group_by(StackNoZed, variable),length(variable))
View(StackNoZed)
StackNoZed <- subset(stacked, value=!0, select= c(value, variable))
View(StackNoZed)
StackNoZed <- subset(stacked, value!0, select= c(value, variable))
StackNoZed <- subset(stacked, value!=0, select= c(value, variable))
summarise(group_by(StackNoZed, variable),length(variable))
cbind(Day, StackNoZed)
Day <- seq(1:98, 1:98, 1:89, 1:96, 1:93, 1:88, 1:70)
cbind(Day, StackNoZed)
Day <- seq(1:98) seq(1:98) seq(1:89) seq(1:96) seq(1:93) seq(1:88) seq(1:70)
Day <- (seq(1:98), seq(1:98), seq(1:89), seq(1:96), seq(1:93), seq(1:88), seq(1:70))
lengthcount <- summarise(group_by(StackNoZed, variable),length(variable))
lengthcount <- summarise(group_by(StackNoZed, variable),length(variable))
View(lengthcount)
DayNum <- rep(0, length(StackNoZed))
DayNum <- rep(0, nrows(StackNoZed))
DayNum <- rep(0, 1:nrows(StackNoZed))
DayNum <- rep(0, nrow(StackNoZed))
}
for (ii in 1:nrow(lengthcount)) {
DayNum <- (c (lengthcount, rep(lengthcount$`length(variable)`[ii],lengthcount$`length(variable)`[ii]))
}
for (ii in 1:nrow(lengthcount)) {
DayNum <- c (lengthcount, rep(lengthcount$`length(variable)`[ii],lengthcount$`length(variable)`[ii]))
}
View(StackNoZed)
DayNum <- rep(0, nrow(StackNoZed))
for (ii in 1:nrow(lengthcount)) {
DayNum <- c (lengthcount, rep(lengthcount$`length(variable)`[ii],lengthcount$`length(variable)`[ii]))
}
View(DayNum)
str(lengthcount)
DayNum <- rep(0, nrow(StackNoZed))
for (ii in 1:nrow(lengthcount)) {
DayNum <- c (Daynum, rep(lengthcount$`length(variable)`[ii],lengthcount$`length(variable)`[ii]))
}
for (ii in 1:nrow(lengthcount)) {
DayNum <- c (rep(lengthcount$`length(variable)`[ii],lengthcount$`length(variable)`[ii]))
}
for (ii in 1:nrow(lengthcount)) {
DayNum <- rep(lengthcount$`length(variable)`[ii],lengthcount$`length(variable)`[ii])
}
DayNum <- rep(0, nrow(StackNoZed))
for (ii in 1:nrow(lengthcount$`length(variable)`)) {
DayNum <- seq(1:lengthcount$`length(variable)`[ii])
}
for (ii in 1:nrow(lengthcount)) {
DayNum <- seq(1:lengthcount$`length(variable)`[ii])
}
for (ii in 1:nrow(lengthcount)) {
print(1)
seq(1:lengthcount$`length(variable)`[ii])
print(2)
}
for (ii in 1:nrow(lengthcount)) {
print(1)
print(seq(1:lengthcount$`length(variable)`[ii]))
print(2)
}
DayNum <- rep(0, nrow(StackNoZed))
lengthcount2 <- data.frame(table(StackNoZed$variable))
View(lengthcount2)
DayNum <- rep(0, nrow(StackNoZed))
for (ii in 1:nrow(lengthcount)) {
print(1)
DayNum <- (rep(lengthcount2$Freq[ii], lengthcount2$Freq[ii]))
print(2)
}
StackNoZed <- cbind(DayNum, StackNoZed)
StackNoZed <- StackNoZed[order(StackNoZed$variable)]
StackNoZed <- order(StackNoZed$variable)
StackNoZed <- StackNoZed$variable[order(StackNoZed$variable)]
StackNoZed <- StackNoZed[order(StackNoZed$variable)]
StackNoZed <- subset(stacked, value!=0, select= c(value, variable))
StackNoZed <- StackNoZed[order(StackNoZed$variable)]
str(StackNoZed)
stacked <- with(KeyCountriesPerCapita,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = character(rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesPerCapita))),
Date = Date))
stacked <- with(KeyCountriesPerCapita,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = as.character(rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesPerCapita))),
Date = Date))
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
StackNoZed <- subset(stacked, value!=0, select= c(value, variable))
StackNoZed <- StackNoZed[order(StackNoZed$variable)]
str(stacked)
stacked <- with(KeyCountriesPerCapita,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = factor(rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesPerCapita))),
Date = Date))
for (ii in 1:nrow(lengthcount)) {
print(1)
DayNum <- (seq(1:lengthcount$`length(variable)`))
print(2)
}
for (ii in 1:nrow(lengthcount)) {
print(1)
DayNum <- (seq(1:lengthcount$`length(variable)`[ii]))
print(2)
}
for (ii in 1:nrow(lengthcount)) {
print(1)
DayNum <- append(DayNum, (seq(1:lengthcount$`length(variable)`[ii])))
print(2)
}
for (ii in 1:nrow(lengthcount)) {
print(1)
if(DayNum!=0) {
DayNum <- append(DayNum, (seq(1:lengthcount$`length(variable)`[ii])))
} else {
DayNum <- seq(1:lengthcount$`length(variable)`[ii])
}
print(3)
}
for (ii in 1:nrow(lengthcount)) {
print(1)
if(DayNum[ii]!=0) {
DayNum <- append(DayNum, (seq(1:lengthcount$`length(variable)`[ii])))
} else {
DayNum <- seq(1:lengthcount$`length(variable)`[ii])
}
print(3)
}
DayNum <- rep(0, nrow(StackNoZed))
for (ii in 1:nrow(lengthcount)) {
print(1)
if(DayNum[ii]!=0) {
DayNum <- append(DayNum, (seq(1:lengthcount$`length(variable)`[ii])))
} else {
DayNum <- seq(1:lengthcount$`length(variable)`[ii])
}
print(3)
}
StackNoZed <- StackNoZed[order(StackNoZed$variable)]
StackNoZed <- StackNoZed[order(StackNoZed$variable),]
View(StackNoZed)
StackNoZed <- cbind(DayNum, StackNoZed)
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
ggplot(StackNoZed, aes(DayNum, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
NormalizedPerCapPlot <-ggplot(StackNoZed, aes(DayNum, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
View(NormalizedPerCapPlot)
NormalizedPerCapPlot <-ggplot(StackNoZed, aes(DayNum, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
ggplot(StackNoZed, aes(DayNum, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
ggplot(StackNoZed, aes(DayNum, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Days Since First Case", title= "Normalized Cases Per Capita", y="Cases Per Million People", colour= "Countries")
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)
library(scales)
ggplot(StackNoZed, aes(DayNum, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "Cases Per Capita", y="Cases Per Million People", colour= "Countries")+
scale_x_date(date_breaks = "weeks")
ggplot(StackNoZed, aes(DayNum, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "Cases Per Capita", y="Cases Per Million People", colour= "Countries")
ggplot(StackNoZed, aes(DayNum, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Days Since First Case", title= "Normalized Cases Per Capita", y="Cases Per Million People", colour= "Countries")
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)=
labs(x= "Date", title= "Cases Per Capita", y="Cases Per Million People", colour= "Countries")+
scale_x_date(date_breaks = "weeks")
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "Cases Per Capita", y="Cases Per Million People", colour= "Countries")+
scale_x_date(date_breaks = "weeks")
as.date(stacked$Date)
stacked$Date <-as.Date(stacked$Date)
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "Cases Per Capita", y="Cases Per Million People", colour= "Countries")+
scale_x_date(date_breaks = "weeks")
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "Cases Per Capita", y="Cases Per Million People", colour= "Countries")+
scale_x_date(date_breaks = "weeks", date_labels = "%b-%d")
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "Cases Per Capita", y="Cases Per Million People", colour= "Countries")+
axis.text.x= element_text(angle=90)+
scale_x_date(date_breaks = "weeks")
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "Cases Per Capita", y="Cases Per Million People", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks")
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "Cases Per Capita", y="Cases Per Million People", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks", date_labels = "%m-%d")
stacked1 <- with(KeyCountriesData,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = factor(rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesPerCapita))),
Date = Date))
stacked1$Date <-as.Date(stacked$Date)
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "COVID-19 Cases Over Time", y="Cases", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks", date_labels = "%m-%d")
ggplot(stacked1, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "COVID-19 Cases Over Time", y="Cases", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks", date_labels = "%m-%d")
ggplot(stacked, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "Cases Per Capita", y="Cases Per Million People", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks", date_labels = "%m-%d")
ggplot(StackNoZed, aes(DayNum, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Days Since First Case", title= "Normalized Cases Per Capita", y="Cases Per Million People", colour= "Countries")
# plot total cases
ggplot(longformcases, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "COVID-19 Cases Over Time", y="Cases", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks", date_labels = "%m-%d")
#convert key countries data frme to long form
longformcases <- with(KeyCountriesData,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = factor(rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesPerCapita))),
Date = Date))
# format date as date for plotting
longformcases$Date <-as.Date(longformcases$Date)
# plot total cases
ggplot(longformcases, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "COVID-19 Cases Over Time", y="Cases", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks", date_labels = "%m-%d")
#convert per capita data to long form
longFormPerCap <- with(KeyCountriesPerCapita,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = factor(rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesPerCapita))),
Date = Date))
# format date as date for plotting
longFormPerCap$Date <-as.Date(longFormPerCap$Date)
# plot cases per capita over time
ggplot(longFormPerCap, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "COVID-19 Cases Per Capita", y="Cases Per Million People", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks", date_labels = "%m-%d")
View(KeyCountriesPerCapita)
View(longFormPerCap)
ggplot(StackNoZed, aes(DayNum, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Days Since First Case", title= "Normalized Cases Per Capita", y="Cases Per Million People", colour= "Countries")
scale_x_date(date_breaks = "weeks")
pdf("Normalized_Cases_Per_Cap")
Normalized_Cases_Per_Cap <- ggplot(longformcases, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "COVID-19 Cases Over Time", y="Cases", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks", date_labels = "%m-%d")
print(Normalized_Cases_Per_Cap)
dev.off()
#convert key countries data frme to long form
longformcases <- with(KeyCountriesData,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = factor(rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesPerCapita))),
Date = Date))
#convert key countries data frme to long form
longformcases <- with(KeyCountriesData,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = factor(rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesPerCapita))),
Date = Date))
# format date as date for plotting
longformcases$Date <-as.Date(longformcases$Date)
# plot total cases
pdf("Total_Cases")
Total_Cases <- ggplot(longformcases, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "COVID-19 Cases Over Time", y="Cases", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks", date_labels = "%m-%d")
# read data into script
# key-countries-pivoted dataset
KeyCountriesData <- read.csv("key-countries-pivoted.csv", stringsAsFactors = F)
#required libraries
library(ggplot2)
library(tidyr)
library(scales)
#convert key countries data frme to long form
longformcases <- with(KeyCountriesData,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = factor(rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesPerCapita))),
Date = Date))
#convert key countries data frme to long form
longformcases <- with(KeyCountriesData,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = factor(rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesData))),
Date = Date))
# format date as date for plotting
longformcases$Date <-as.Date(longformcases$Date)
# plot total cases
pdf("Total_Cases")
Total_Cases <- ggplot(longformcases, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "COVID-19 Cases Over Time", y="Cases", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks", date_labels = "%m-%d")
print(Total_Cases)
dev.off()
# plot total cases
pdf("Total_Cases.pdf")
Total_Cases <- ggplot(longformcases, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "COVID-19 Cases Over Time", y="Cases", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks", date_labels = "%m-%d")
print(Total_Cases)
dev.off()
# make data frame of national cases per capita
# data frame of national populations in millions
CountryPopulation <- data.frame(1392.73000,326.68750, 66.46034, 60.42176, 66.97711, 82.90578, 46.79654, 81.80027)
colnames(CountryPopulation) <- c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran")
rownames(CountryPopulation) <- ("population(millions)")
# normalize cases per country by population
KeyCountriesNoDate <- as.matrix(KeyCountriesData[,2:9]) #convert to matrix for sweep function
CountryPopulationMat <- as.matrix(CountryPopulation)
DataPerCapitaNoDate <- as.data.frame (sweep (KeyCountriesNoDate, 2, CountryPopulationMat, '/')) #use sweep to divide each value by national population
# attach date
Date <- KeyCountriesData$Date
KeyCountriesPerCapita <- cbind(Date, DataPerCapitaNoDate)
#convert per capita data to long form
longFormPerCap <- with(KeyCountriesPerCapita,
data.frame(value = c(China, US, United_Kingdom, Italy, France, Germany, Spain, Iran),
variable = factor(rep(c("China", "US", "United_Kingdom", "Italy", "France", "Germany", "Spain", "Iran"),
each = NROW(KeyCountriesPerCapita))),
Date = Date))
# format date as date for plotting
longFormPerCap$Date <-as.Date(longFormPerCap$Date)
# plot cases per capita over time
pdf("Cases_Per_Cap.pdf")
Cases_Per_Cap <- ggplot(longFormPerCap, aes(Date, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Date", title= "COVID-19 Cases Per Capita", y="Cases Per Million People", colour= "Countries")+
theme (axis.text.x= element_text(angle=90))+
scale_x_date(date_breaks = "weeks", date_labels = "%m-%d")
print(Cases_Per_Cap)
dev.off()
# delete longFormPerCapita rows with zeros
LongFormNoZed <- subset(longFormPerCap, value!=0, select= c(value, variable))
LongFormNoZed <- LongFormNoZed[order(LongFormNoZed$variable),] #alphabetize by country name for applying count
lengthcount <- summarise(group_by(LongFormNoZed, variable),length(variable)) #count number of nonzero values for each country
# pre-allocate count vector
DayNum <- rep(0, nrow(StackNoZed))
# write count sequences
for (ii in 1:nrow(lengthcount)) {
if(DayNum[ii]!=0) {
DayNum <- append(DayNum, (seq(1:lengthcount$`length(variable)`[ii])))
} else {
DayNum <- seq(1:lengthcount$`length(variable)`[ii])
}
}
# pre-allocate count vector
DayNum <- rep(0, nrow(StackNoZed))
# pre-allocate count vector
DayNum <- rep(0, nrow(LongFormNoZed))
# write count sequences
for (ii in 1:nrow(lengthcount)) {
if(DayNum[ii]!=0) {
DayNum <- append(DayNum, (seq(1:lengthcount$`length(variable)`[ii])))
} else {
DayNum <- seq(1:lengthcount$`length(variable)`[ii])
}
}
# bind count to non-zero dataframe
LongFormNoZed <- cbind(DayNum, longFormNoZed)
# plot normalized per cap data
pdf("Norm_Cases_Per_Cap.pdf")
Norm_Cases_Per_Cap <- ggplot(LongFormNoZed, aes(DayNum, value, colour = variable, group=variable))+
geom_line()+
geom_point(size=0.75)+
labs(x= "Days Since First Case", title= "Normalized Cases Per Capita", y="Cases Per Million People", colour= "Countries")
print(Norm_Cases_Per_Cap)
dev.off()
